// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  email       String    @unique
  name        String?
  publicKey   String
  privateKey  String
  address     Address?
}

model Address {
  id      String       @id @default(uuid())
  address String   @unique
  userId  String      @unique
  user    User     @relation(fields: [userId], references: [id])
  balance String  @default("0")
}

enum Status {
  PENDING
  COMPLETED
  FAILED
}

model TransactionData {
  id           String       @id @default(uuid())
  type         TransactionType
  toAddress       String
  txHash       String   @unique
  isDone       Boolean  @default(false)
  amount       String
  fromAddress       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model TransactionPending {
  id String       @id @default(uuid())
  amount String
  address String
  type TransactionType @default(DEPOSIT)
}

model TransactionWithDrawlPending {
  id String       @id @default(uuid())
  amount String
  fromAddress String
  toAddress String
  type TransactionType @default(WITHDRAW)
}

enum TransactionType {
  DEPOSIT
  WITHDRAW
}

model NetworkStatus {
  id                 String       @id @default(uuid())
  lastProcessedBlock Int
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}
